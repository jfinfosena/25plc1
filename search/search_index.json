{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Inicio","text":""},{"location":"#bienvenidos-al-submodulo-de-programacion-de-plc-controladores-logicos-programables","title":"\ud83d\ude80 Bienvenidos al Subm\u00f3dulo de Programaci\u00f3n de PLC (Controladores L\u00f3gicos Programables)","text":"<p>\u00a1Bienvenidos a este emocionante viaje hacia el mundo de la automatizaci\u00f3n industrial y la programaci\u00f3n de PLC! Este curso est\u00e1 dise\u00f1ado para introducirte en los conceptos esenciales de los Controladores L\u00f3gicos Programables, herramientas fundamentales en la industria moderna. Ya seas un principiante o alguien con experiencia previa en tecnolog\u00eda, este curso te brindar\u00e1 las habilidades pr\u00e1cticas necesarias para destacar en el campo de la automatizaci\u00f3n.</p>"},{"location":"#que-aprenderas-en-este-curso","title":"\u00bfQu\u00e9 aprender\u00e1s en este curso?","text":"<p>Este curso abarca una amplia gama de temas fundamentales y avanzados, organizados en m\u00f3dulos espec\u00edficos:</p>"},{"location":"#1-fundamentacion-en-plc","title":"1. Fundamentaci\u00f3n en PLC","text":"<ul> <li>Introducci\u00f3n a los PLC: Aprender\u00e1s sobre los conceptos b\u00e1sicos de los Controladores L\u00f3gicos Programables, su historia, aplicaciones y ventajas en la industria.</li> <li>Componentes de un PLC: Conocer\u00e1s los diferentes componentes de un PLC, como la CPU, m\u00f3dulos de entrada/salida, fuentes de alimentaci\u00f3n y dispositivos de comunicaci\u00f3n.</li> <li>Lenguajes de programaci\u00f3n: Explorar\u00e1s los lenguajes de programaci\u00f3n m\u00e1s comunes para PLC, como Ladder Diagram (LD), Function Block Diagram (FBD), y Structured Text (ST).</li> </ul>"},{"location":"#2-programacion-basica-de-plc","title":"2. Programaci\u00f3n B\u00e1sica de PLC","text":"<ul> <li>Configuraci\u00f3n inicial: Aprender\u00e1s a configurar un entorno de desarrollo para PLC, incluyendo la instalaci\u00f3n de software y la conexi\u00f3n de hardware.</li> <li>Programaci\u00f3n en Ladder: Dominar\u00e1s la creaci\u00f3n de programas b\u00e1sicos utilizando el lenguaje Ladder, incluyendo el uso de contactos, bobinas, temporizadores y contadores.</li> <li>Resoluci\u00f3n de problemas comunes: Aprender\u00e1s a diagnosticar y solucionar problemas comunes en la programaci\u00f3n de PLC.</li> </ul>"},{"location":"#3-programacion-avanzada-de-plc","title":"3. Programaci\u00f3n Avanzada de PLC","text":"<ul> <li>Uso de funciones avanzadas: Explorar\u00e1s funciones avanzadas como comparadores, operaciones matem\u00e1ticas, y manejo de datos.</li> <li>Programaci\u00f3n estructurada: Aprender\u00e1s a organizar tu c\u00f3digo de manera eficiente utilizando subrutinas y funciones.</li> <li>Manejo de entradas y salidas anal\u00f3gicas: Conocer\u00e1s c\u00f3mo trabajar con se\u00f1ales anal\u00f3gicas y convertirlas en valores digitales para su procesamiento.</li> </ul>"},{"location":"#4-integracion-de-plc-con-sistemas-de-control","title":"4. Integraci\u00f3n de PLC con Sistemas de Control","text":"<ul> <li>Comunicaci\u00f3n industrial: Aprender\u00e1s sobre los protocolos de comunicaci\u00f3n m\u00e1s comunes en la industria, como Modbus, Profibus, y Ethernet/IP.</li> <li>Integraci\u00f3n con SCADA: Conocer\u00e1s c\u00f3mo integrar un PLC con sistemas SCADA para la supervisi\u00f3n y control de procesos industriales.</li> <li>Proyectos de automatizaci\u00f3n: Desarrollar\u00e1s proyectos completos que integren PLC, sensores, actuadores y sistemas de control.</li> </ul>"},{"location":"#5-mantenimiento-y-diagnostico-de-plc","title":"5. Mantenimiento y Diagn\u00f3stico de PLC","text":"<ul> <li>Mantenimiento preventivo: Aprender\u00e1s las mejores pr\u00e1cticas para el mantenimiento preventivo de PLC y sus componentes.</li> <li>Diagn\u00f3stico de fallas: Conocer\u00e1s las t\u00e9cnicas y herramientas para diagnosticar y solucionar fallas en sistemas basados en PLC.</li> <li>Actualizaci\u00f3n de firmware: Aprender\u00e1s a actualizar el firmware de un PLC y a realizar copias de seguridad de los programas.</li> </ul>"},{"location":"#metodologia-del-curso","title":"Metodolog\u00eda del curso","text":"<p>El curso combina teor\u00eda y pr\u00e1ctica para garantizar que aprendas de manera efectiva:</p> <ul> <li>Clases te\u00f3ricas: Explicaciones claras y concisas sobre los conceptos fundamentales.</li> <li>Laboratorios pr\u00e1cticos: Ejercicios guiados para aplicar lo aprendido en entornos controlados.</li> <li>Proyectos integradores: Desarrollo de soluciones completas que integren PLC, sensores, actuadores y sistemas de control.</li> </ul>"},{"location":"#compromiso-del-sena","title":"Compromiso del SENA","text":"<p>En el SENA, estamos comprometidos con tu \u00e9xito. Este curso no solo busca ense\u00f1arte herramientas tecnol\u00f3gicas, sino tambi\u00e9n inspirarte a ser un agente de cambio en el mundo de la automatizaci\u00f3n industrial. Nuestro objetivo es que al finalizar este programa, tengas la confianza y las habilidades necesarias para enfrentar cualquier desaf\u00edo en el campo de los PLC.</p>"},{"location":"#comencemos-este-viaje-juntos","title":"\u00a1Comencemos este viaje juntos!","text":"<p>Estamos emocionados de acompa\u00f1arte en este proceso de aprendizaje. Con dedicaci\u00f3n y esfuerzo, pronto estar\u00e1s creando soluciones innovadoras, automatizando procesos industriales y colaborando en proyectos tecnol\u00f3gicos de alto impacto.</p> <p>\u00a1Bienvenido al futuro de la automatizaci\u00f3n industrial!</p>"},{"location":"about/","title":"Acerca de","text":""},{"location":"about/#el-submodulo-de-programacion-de-plc-controladores-logicos-programables","title":"El Subm\u00f3dulo de Programaci\u00f3n de PLC (Controladores L\u00f3gicos Programables)","text":"<p>El Subm\u00f3dulo de Programaci\u00f3n de PLC es una iniciativa educativa del SENA, dise\u00f1ada para introducir a los estudiantes en los fundamentos y aplicaciones de los Controladores L\u00f3gicos Programables en la automatizaci\u00f3n industrial. Este curso combina teor\u00eda y pr\u00e1ctica para brindar una base s\u00f3lida en programaci\u00f3n de PLC, integraci\u00f3n de sistemas de control y resoluci\u00f3n de problemas en entornos industriales.  </p>"},{"location":"about/#proposito-del-curso","title":"Prop\u00f3sito del Curso","text":"<p>Este curso busca capacitar a los estudiantes en el uso de PLC para resolver problemas reales en la industria, desde la automatizaci\u00f3n de procesos hasta la integraci\u00f3n de sistemas de control. Al finalizar, los participantes estar\u00e1n preparados para aplicar sus conocimientos en entornos profesionales y colaborar en proyectos de automatizaci\u00f3n de alto impacto.  </p> <p>\u00a1\u00danete a nosotros y comienza tu camino hacia el futuro de la automatizaci\u00f3n industrial!  </p>"},{"location":"blog/","title":"Blog","text":""},{"location":"content/p1/","title":"Fundamentos de PLC**","text":""},{"location":"content/p1/#que-es-un-plc-y-para-que-sirve","title":"\u00bfQu\u00e9 es un PLC y para qu\u00e9 sirve?","text":"<p>Un PLC (Controlador L\u00f3gico Programable) es un dispositivo electr\u00f3nico utilizado para automatizar procesos industriales. Su funci\u00f3n principal es controlar m\u00e1quinas y sistemas mediante la ejecuci\u00f3n de programas espec\u00edficos. Los PLC son ampliamente utilizados en la industria porque son flexibles, confiables y permiten la automatizaci\u00f3n de tareas repetitivas o complejas, como el control de motores, v\u00e1lvulas, sensores y otros dispositivos.  </p>"},{"location":"content/p1/#componentes-basicos-de-un-plc","title":"Componentes b\u00e1sicos de un PLC","text":"<p>Un PLC est\u00e1 compuesto por los siguientes elementos principales:  </p> <ol> <li>CPU (Unidad Central de Procesamiento):  </li> <li>Es el \"cerebro\" del PLC. Se encarga de ejecutar el programa de control, procesar las entradas y generar las salidas correspondientes.  </li> <li> <p>Tambi\u00e9n gestiona la comunicaci\u00f3n con otros dispositivos y sistemas.  </p> </li> <li> <p>M\u00f3dulos de Entrada (Inputs):  </p> </li> <li>Reciben se\u00f1ales de sensores, interruptores u otros dispositivos externos.  </li> <li> <p>Estas se\u00f1ales pueden ser digitales (encendido/apagado) o anal\u00f3gicas (valores variables como temperatura o presi\u00f3n).  </p> </li> <li> <p>M\u00f3dulos de Salida (Outputs):  </p> </li> <li>Env\u00edan se\u00f1ales a actuadores, motores, v\u00e1lvulas, luces u otros dispositivos para controlar su funcionamiento.  </li> <li> <p>Al igual que las entradas, las salidas pueden ser digitales o anal\u00f3gicas.  </p> </li> <li> <p>Memoria:  </p> </li> <li>Almacena el programa de control, los datos de configuraci\u00f3n y los valores temporales durante la ejecuci\u00f3n.  </li> <li> <p>La memoria se divide en dos tipos:  </p> <ul> <li>Memoria de programa: Guarda el c\u00f3digo del programa (por ejemplo, en lenguaje Ladder).  </li> <li>Memoria de datos: Almacena valores temporales, como estados de entradas/salidas o variables de proceso.  </li> </ul> </li> <li> <p>Fuente de alimentaci\u00f3n:  </p> </li> <li> <p>Proporciona la energ\u00eda necesaria para el funcionamiento del PLC y sus componentes.  </p> </li> <li> <p>Dispositivos de comunicaci\u00f3n:  </p> </li> <li>Permiten la conexi\u00f3n del PLC con otros sistemas, como SCADA, HMI (Interfaces Hombre-M\u00e1quina) o redes industriales.  </li> </ol>"},{"location":"content/p1/#introduccion-al-lenguaje-ladder-origen-y-caracteristicas","title":"Introducci\u00f3n al lenguaje Ladder: origen y caracter\u00edsticas","text":"<p>El lenguaje Ladder (o diagrama de escalera) es uno de los lenguajes de programaci\u00f3n m\u00e1s utilizados en PLC. Su nombre proviene de su similitud con los diagramas el\u00e9ctricos de rel\u00e9s, que se asemejan a una escalera.  </p> <ul> <li>Origen:  </li> <li>Surgi\u00f3 como una evoluci\u00f3n de los sistemas de control basados en rel\u00e9s electromec\u00e1nicos.  </li> <li> <p>Fue dise\u00f1ado para que los t\u00e9cnicos e ingenieros el\u00e9ctricos pudieran programar PLC sin necesidad de aprender lenguajes de programaci\u00f3n tradicionales.  </p> </li> <li> <p>Caracter\u00edsticas:  </p> </li> <li>Es visual e intuitivo, lo que facilita su comprensi\u00f3n.  </li> <li>Utiliza s\u00edmbolos gr\u00e1ficos que representan contactos, bobinas, temporizadores, contadores y otras funciones l\u00f3gicas.  </li> <li>Es ideal para aplicaciones de control secuencial y l\u00f3gica booleana.  </li> </ul>"},{"location":"content/p1/#ejemplo-basico-diagrama-de-un-circuito-simple-contacto-y-bobina","title":"Ejemplo b\u00e1sico: diagrama de un circuito simple (contacto y bobina)","text":"<p>A continuaci\u00f3n, se muestra un ejemplo b\u00e1sico de un programa en lenguaje Ladder para encender una l\u00e1mpara (bobina) cuando se activa un interruptor (contacto):  </p> <pre><code>    ----[ ]----( )----\n</code></pre> <ul> <li>Explicaci\u00f3n:  </li> <li><code>[ ]</code>: Representa un contacto normalmente abierto (NO). En este caso, es un interruptor.  </li> <li> <p><code>( )</code>: Representa una bobina, que en este ejemplo es una l\u00e1mpara.  </p> </li> <li> <p>Funcionamiento:  </p> </li> <li>Cuando el interruptor (contacto) est\u00e1 cerrado (activado), la corriente fluye a trav\u00e9s del circuito y la bobina (l\u00e1mpara) se activa (se enciende).  </li> <li>Cuando el interruptor est\u00e1 abierto (desactivado), la corriente se interrumpe y la bobina se desactiva (se apaga).  </li> </ul>"},{"location":"content/p1/#que-son-contactos-y-bobinas-en-ladder","title":"\u00bfQu\u00e9 son Contactos y Bobinas en Ladder?","text":"<p>El lenguaje Ladder est\u00e1 inspirado en los diagramas de rel\u00e9s el\u00e9ctricos, por lo que los contactos y las bobinas imitan el comportamiento de interruptores y actuadores f\u00edsicos, pero en un entorno l\u00f3gico digital dentro del PLC.</p> <ol> <li>Contactos: Representan las entradas o condiciones l\u00f3gicas (como sensores, botones o estados internos). Son los \"interruptores\" que permiten o bloquean el flujo de \"energ\u00eda l\u00f3gica\" en el diagrama.</li> <li>Bobinas: Representan las salidas o acciones (como l\u00e1mparas, motores o se\u00f1ales internas). Se activan o desactivan seg\u00fan las condiciones definidas por los contactos.</li> </ol> <p>El flujo l\u00f3gico en Ladder va de izquierda a derecha: los contactos determinan si la \"corriente\" llega a la bobina, que ejecuta la acci\u00f3n.</p>"},{"location":"content/p1/#1-contactos-tipos-y-funcionamiento","title":"1. Contactos: Tipos y Funcionamiento","text":"<p>Los contactos simulan interruptores que est\u00e1n conectados a las entradas del PLC (como I0.0, I0.1) o a variables internas. Hay dos tipos principales:</p>"},{"location":"content/p1/#a-contacto-normalmente-abierto-no-","title":"a) Contacto Normalmente Abierto (NO) - <code>[ ]</code>","text":"<ul> <li>S\u00edmbolo: <code>[I0.0]</code> (por ejemplo).</li> <li>Comportamiento: </li> <li>Est\u00e1 \"cerrado\" (permite el paso del flujo l\u00f3gico) cuando la entrada asociada es verdadera (1).</li> <li>Est\u00e1 \"abierto\" (bloquea el flujo) cuando la entrada es falsa (0).</li> <li>Ejemplo: Un bot\u00f3n conectado a I0.0.</li> <li>Si presionas el bot\u00f3n (I0.0 = 1), el contacto se cierra.</li> <li>Si no lo presionas (I0.0 = 0), el contacto est\u00e1 abierto.</li> </ul>"},{"location":"content/p1/#b-contacto-normalmente-cerrado-nc-","title":"b) Contacto Normalmente Cerrado (NC) - <code>[/]</code>","text":"<ul> <li>S\u00edmbolo: <code>[I0.0/]</code>.</li> <li>Comportamiento:</li> <li>Est\u00e1 \"cerrado\" (permite el flujo) cuando la entrada asociada es falsa (0).</li> <li>Est\u00e1 \"abierto\" (bloquea el flujo) cuando la entrada es verdadera (1).</li> <li>Es una inversi\u00f3n l\u00f3gica (NOT) del estado de la entrada.</li> <li>Ejemplo: Un sensor de parada conectado a I0.1.</li> <li>Si el sensor no detecta nada (I0.1 = 0), el contacto NC est\u00e1 cerrado.</li> <li>Si el sensor se activa (I0.1 = 1), el contacto NC se abre.</li> </ul>"},{"location":"content/p1/#analogia-fisica","title":"Analog\u00eda F\u00edsica:","text":"<p>Piensa en un contacto NO como un interruptor que debes presionar para encender una luz, y en un contacto NC como un interruptor que est\u00e1 encendido por defecto y se apaga al presionarlo.</p>"},{"location":"content/p1/#2-bobinas-tipos-y-funcionamiento","title":"2. Bobinas: Tipos y Funcionamiento","text":"<p>Las bobinas son los elementos que reciben el flujo l\u00f3gico y ejecutan una acci\u00f3n. Est\u00e1n conectadas a las salidas del PLC (como Q0.0, Q0.1) o a variables internas. Hay varios tipos, pero los m\u00e1s comunes son:</p>"},{"location":"content/p1/#a-bobina-de-salida-normal-","title":"a) Bobina de Salida Normal - <code>( )</code>","text":"<ul> <li>S\u00edmbolo: <code>(Q0.0)</code> (por ejemplo).</li> <li>Comportamiento:</li> <li>Se activa (Q0.0 = 1) cuando el flujo l\u00f3gico llega a ella (todos los contactos a su izquierda permiten el paso).</li> <li>Se desactiva (Q0.0 = 0) cuando el flujo no llega.</li> <li>Ejemplo: Una l\u00e1mpara conectada a Q0.0.</li> <li>Si el flujo llega, la l\u00e1mpara se enciende.</li> <li>Si no llega, la l\u00e1mpara se apaga.</li> </ul>"},{"location":"content/p1/#b-bobina-de-set-latched-s","title":"b) Bobina de Set (Latched) - <code>(S)</code>","text":"<ul> <li>S\u00edmbolo: <code>(S Q0.0)</code>.</li> <li>Comportamiento:</li> <li>Se activa (Q0.0 = 1) cuando recibe flujo l\u00f3gico y permanece activada aunque el flujo se corte, hasta que se desactive manualmente (con una bobina de Reset).</li> <li>Ejemplo: Un motor que se enciende y queda encendido tras un pulso breve.</li> </ul>"},{"location":"content/p1/#c-bobina-de-reset-r","title":"c) Bobina de Reset - <code>(R)</code>","text":"<ul> <li>S\u00edmbolo: <code>(R Q0.0)</code>.</li> <li>Comportamiento:</li> <li>Desactiva (Q0.0 = 0) una salida que estaba previamente activada con una bobina de Set.</li> <li>Ejemplo: Apagar el motor que se encendi\u00f3 con Set.</li> </ul>"},{"location":"content/p1/#analogia-fisica_1","title":"Analog\u00eda F\u00edsica:","text":"<p>Una bobina normal es como una l\u00e1mpara que depende de un interruptor continuo; una bobina de Set/Reset es como un interruptor de encendido/apagado que \"recuerda\" su estado.</p>"},{"location":"content/p1/#ejemplos-practicos","title":"Ejemplos Pr\u00e1cticos","text":""},{"location":"content/p1/#ejemplo-1-contacto-no-con-bobina-normal","title":"Ejemplo 1: Contacto NO con Bobina Normal","text":"<p>Escenario: Una l\u00e1mpara (Q0.0) se enciende al presionar un bot\u00f3n (I0.0). <pre><code>|---[I0.0]---(Q0.0)---|\n</code></pre> - Si I0.0 = 1 (bot\u00f3n presionado), el contacto NO se cierra y la bobina Q0.0 se activa (l\u00e1mpara encendida). - Si I0.0 = 0 (bot\u00f3n suelto), el contacto est\u00e1 abierto y Q0.0 se desactiva (l\u00e1mpara apagada).</p>"},{"location":"content/p1/#ejemplo-2-contacto-nc-con-bobina-normal","title":"Ejemplo 2: Contacto NC con Bobina Normal","text":"<p>Escenario: Una alarma (Q0.1) suena cuando un sensor (I0.1) NO detecta algo. <pre><code>|---[I0.1/]---(Q0.1)---|\n</code></pre> - Si I0.1 = 0 (sensor inactivo), el contacto NC est\u00e1 cerrado y Q0.1 se activa (alarma suena). - Si I0.1 = 1 (sensor activo), el contacto NC se abre y Q0.1 se desactiva (alarma apagada).</p>"},{"location":"content/p1/#ejemplo-3-combinacion-de-contactos-con-bobina","title":"Ejemplo 3: Combinaci\u00f3n de Contactos con Bobina","text":"<p>Escenario: Un motor (Q0.0) se enciende si se presionan dos botones (I0.0 e I0.1) Y no hay parada (I0.2). <pre><code>|---[I0.0]---[I0.1]---[I0.2/]---(Q0.0)---|\n</code></pre> - I0.0 e I0.1 en serie (AND): ambos deben estar en 1. - I0.2/ (NC): debe estar en 0 (sin parada). - Si todas las condiciones se cumplen, Q0.0 se activa.</p>"},{"location":"content/p1/#ejemplo-4-bobina-de-set-y-reset","title":"Ejemplo 4: Bobina de Set y Reset","text":"<p>Escenario: Un ventilador (Q0.0) se enciende con un bot\u00f3n (I0.0) y se apaga con otro (I0.1). <pre><code>|---[I0.0]---(S Q0.0)---|  (Encendido)\n|---[I0.1]---(R Q0.0)---|  (Apagado)\n</code></pre> - Si I0.0 = 1, Q0.0 se activa y queda encendido. - Si I0.1 = 1, Q0.0 se desactiva.</p>"},{"location":"content/p1/#relacion-entre-contactos-y-bobinas","title":"Relaci\u00f3n entre Contactos y Bobinas","text":"<ol> <li>Flujo L\u00f3gico: Los contactos controlan si la \"corriente l\u00f3gica\" llega a la bobina. El PLC eval\u00faa cada rung (l\u00ednea) de izquierda a derecha.</li> <li>Estado: </li> <li>Contacto NO cerrado = entrada en 1.</li> <li>Contacto NC cerrado = entrada en 0.</li> <li>Bobina activa = flujo completo.</li> <li>Ubicaci\u00f3n: </li> <li>Contactos siempre a la izquierda.</li> <li>Bobinas siempre a la derecha (final del rung).</li> </ol>"},{"location":"content/p1/#consejos-practicos","title":"Consejos Pr\u00e1cticos","text":"<ul> <li>Nomenclatura: Usa nombres claros (I para entradas, Q para salidas) seg\u00fan el est\u00e1ndar de tu PLC (ej. Siemens usa I/Q, Allen-Bradley usa I:/O:).</li> <li>Simulaci\u00f3n: Prueba tus diagramas en software para ver c\u00f3mo responden contactos y bobinas.</li> <li>Lectura: Piensa en cada rung como una pregunta: \"\u00bfSe cumple esta condici\u00f3n para activar la salida?\"</li> </ul>"},{"location":"content/p10/","title":"Semana 10","text":"<p>Note</p> <p>El contenido se publicar\u00e1 en la fecha correspondiente.</p>"},{"location":"content/p11/","title":"Semana 11","text":"<p>Note</p> <p>El contenido se publicar\u00e1 en la fecha correspondiente.</p>"},{"location":"content/p12/","title":"Semana 12","text":"<p>Note</p> <p>El contenido se publicar\u00e1 en la fecha correspondiente.</p>"},{"location":"content/p13/","title":"Semana 13","text":"<p>Note</p> <p>El contenido se publicar\u00e1 en la fecha correspondiente.</p>"},{"location":"content/p14/","title":"Semana 14","text":"<p>Note</p> <p>El contenido se publicar\u00e1 en la fecha correspondiente.</p>"},{"location":"content/p15/","title":"Semana 15","text":"<p>Note</p> <p>El contenido se publicar\u00e1 en la fecha correspondiente.</p>"},{"location":"content/p16/","title":"Semana 16","text":"<p>Note</p> <p>El contenido se publicar\u00e1 en la fecha correspondiente.</p>"},{"location":"content/p17/","title":"Semana 17","text":"<p>Note</p> <p>El contenido se publicar\u00e1 en la fecha correspondiente.</p>"},{"location":"content/p18/","title":"Semana 18","text":"<p>Note</p> <p>El contenido se publicar\u00e1 en la fecha correspondiente.</p>"},{"location":"content/p2/","title":"Compuertas L\u00f3gicas en Contactos","text":"<p>En la programaci\u00f3n de PLC, las compuertas l\u00f3gicas son la base para construir circuitos de control. Estas compuertas se implementan utilizando contactos en el lenguaje Ladder y permiten realizar operaciones l\u00f3gicas como AND, OR, NOT, entre otras. A continuaci\u00f3n, te explicamos cada una de ellas con ejemplos pr\u00e1cticos.  </p>"},{"location":"content/p2/#1-compuerta-and-y","title":"1. Compuerta AND (Y)","text":"<p>La compuerta AND devuelve un valor verdadero (1) solo si todos sus entradas son verdaderas. En lenguaje Ladder, se representa con contactos en serie.  </p>"},{"location":"content/p2/#ejemplo-en-ladder","title":"Ejemplo en Ladder:","text":"<pre><code>    ----[ ]----[ ]----( )----\n</code></pre> <ul> <li>Explicaci\u00f3n:  </li> <li><code>[ ]</code>: Contactos normalmente abiertos (NO).  </li> <li> <p><code>( )</code>: Bobina (salida).  </p> </li> <li> <p>Funcionamiento:  </p> </li> <li>La bobina se activar\u00e1 (1) solo si ambos contactos est\u00e1n cerrados (activados).  </li> <li> <p>Si uno o ambos contactos est\u00e1n abiertos (0), la bobina permanecer\u00e1 desactivada (0).  </p> </li> <li> <p>Tabla de verdad:  </p> </li> </ul> Entrada A Entrada B Salida 0 0 0 0 1 0 1 0 0 1 1 1"},{"location":"content/p2/#2-compuerta-or-o","title":"2. Compuerta OR (O)","text":"<p>La compuerta OR devuelve un valor verdadero (1) si al menos una de sus entradas es verdadera. En lenguaje Ladder, se representa con contactos en paralelo.  </p>"},{"location":"content/p2/#ejemplo-en-ladder_1","title":"Ejemplo en Ladder:","text":"<pre><code>    ----[ ]----( )----\n         |\n    ----[ ]----\n</code></pre> <ul> <li>Explicaci\u00f3n:  </li> <li><code>[ ]</code>: Contactos normalmente abiertos (NO).  </li> <li> <p><code>( )</code>: Bobina (salida).  </p> </li> <li> <p>Funcionamiento:  </p> </li> <li>La bobina se activar\u00e1 (1) si al menos uno de los contactos est\u00e1 cerrado (activado).  </li> <li> <p>Solo se desactiva (0) si todos los contactos est\u00e1n abiertos (0).  </p> </li> <li> <p>Tabla de verdad:  </p> </li> </ul> Entrada A Entrada B Salida 0 0 0 0 1 1 1 0 1 1 1 1"},{"location":"content/p2/#3-compuerta-not-no","title":"3. Compuerta NOT (NO)","text":"<p>La compuerta NOT invierte el valor de la entrada. Si la entrada es verdadera (1), la salida ser\u00e1 falsa (0), y viceversa. En lenguaje Ladder, se representa con un contacto normalmente cerrado (NC).  </p>"},{"location":"content/p2/#ejemplo-en-ladder_2","title":"Ejemplo en Ladder:","text":"<pre><code>    ----[/]----( )----\n</code></pre> <ul> <li>Explicaci\u00f3n:  </li> <li><code>[/]</code>: Contacto normalmente cerrado (NC).  </li> <li> <p><code>( )</code>: Bobina (salida).  </p> </li> <li> <p>Funcionamiento:  </p> </li> <li>Si el contacto est\u00e1 abierto (0), la bobina se activa (1).  </li> <li> <p>Si el contacto est\u00e1 cerrado (1), la bobina se desactiva (0).  </p> </li> <li> <p>Tabla de verdad:  </p> </li> </ul> Entrada A Salida 0 1 1 0"},{"location":"content/p2/#4-compuerta-nand-no-y","title":"4. Compuerta NAND (NO Y)","text":"<p>La compuerta NAND es una combinaci\u00f3n de las compuertas AND y NOT. Devuelve un valor falso (0) solo si todas sus entradas son verdaderas. En lenguaje Ladder, se implementa con contactos en serie y un contacto NC.  </p>"},{"location":"content/p2/#ejemplo-en-ladder_3","title":"Ejemplo en Ladder:","text":"<pre><code>    ----[ ]----[ ]----[/]----( )----\n</code></pre> <ul> <li>Explicaci\u00f3n:  </li> <li><code>[ ]</code>: Contactos normalmente abiertos (NO).  </li> <li><code>[/]</code>: Contacto normalmente cerrado (NC).  </li> <li> <p><code>( )</code>: Bobina (salida).  </p> </li> <li> <p>Funcionamiento:  </p> </li> <li>La bobina se activar\u00e1 (1) a menos que ambos contactos est\u00e9n cerrados (1).  </li> <li> <p>Si ambos contactos est\u00e1n cerrados (1), la bobina se desactiva (0).  </p> </li> <li> <p>Tabla de verdad:  </p> </li> </ul> Entrada A Entrada B Salida 0 0 1 0 1 1 1 0 1 1 1 0"},{"location":"content/p2/#5-compuerta-nor-no-o","title":"5. Compuerta NOR (NO O)","text":"<p>La compuerta NOR es una combinaci\u00f3n de las compuertas OR y NOT. Devuelve un valor verdadero (1) solo si todas sus entradas son falsas. En lenguaje Ladder, se implementa con contactos en paralelo y un contacto NC.  </p>"},{"location":"content/p2/#ejemplo-en-ladder_4","title":"Ejemplo en Ladder:","text":"<pre><code>    ----[ ]----[/]----( )----\n         |\n    ----[ ]----\n</code></pre> <ul> <li>Explicaci\u00f3n:  </li> <li><code>[ ]</code>: Contactos normalmente abiertos (NO).  </li> <li><code>[/]</code>: Contacto normalmente cerrado (NC).  </li> <li> <p><code>( )</code>: Bobina (salida).  </p> </li> <li> <p>Funcionamiento:  </p> </li> <li>La bobina se activar\u00e1 (1) solo si todos los contactos est\u00e1n abiertos (0).  </li> <li> <p>Si al menos un contacto est\u00e1 cerrado (1), la bobina se desactiva (0).  </p> </li> <li> <p>Tabla de verdad: </p> </li> </ul> Entrada A Entrada B Salida 0 0 1 0 1 0 1 0 0 1 1 0"},{"location":"content/p2/#6-compuerta-xor-o-exclusivo","title":"6. Compuerta XOR (O Exclusivo)","text":"<p>La compuerta XOR devuelve un valor verdadero (1) si solo una de sus entradas es verdadera, pero no ambas. En lenguaje Ladder, se implementa combinando contactos en serie y paralelo.  </p>"},{"location":"content/p2/#ejemplo-en-ladder_5","title":"Ejemplo en Ladder:","text":"<pre><code>    ----[ ]----[ ]----( )----\n         |         |\n    ----[ ]----[ ]----\n</code></pre> <ul> <li>Explicaci\u00f3n:  </li> <li><code>[ ]</code>: Contactos normalmente abiertos (NO).  </li> <li> <p><code>( )</code>: Bobina (salida).  </p> </li> <li> <p>Funcionamiento:  </p> </li> <li>La bobina se activar\u00e1 (1) si solo uno de los contactos est\u00e1 cerrado (1).  </li> <li> <p>Si ambos contactos est\u00e1n cerrados (1) o abiertos (0), la bobina se desactiva (0).  </p> </li> <li> <p>Tabla de verdad:  </p> </li> </ul> Entrada A Entrada B Salida 0 0 0 0 1 1 1 0 1 1 1 0"},{"location":"content/p3/","title":"Ejemplos Utilizando Compuertas L\u00f3gicas","text":"<p>Las compuertas l\u00f3gicas son fundamentales en la programaci\u00f3n de PLC para resolver problemas de automatizaci\u00f3n industrial. A continuaci\u00f3n, te presento ejemplos reales de c\u00f3mo se aplican estas compuertas en situaciones pr\u00e1cticas.  </p>"},{"location":"content/p3/#1-control-de-una-puerta-automatica","title":"1. Control de una Puerta Autom\u00e1tica","text":"<p>Descripci\u00f3n: Una puerta autom\u00e1tica debe abrirse si se activa un sensor de proximidad Y un bot\u00f3n de apertura est\u00e1 presionado. Adem\u00e1s, la puerta no debe abrirse si hay una se\u00f1al de emergencia activa.  </p> <p>Compuertas utilizadas: - AND: Para combinar el sensor de proximidad y el bot\u00f3n de apertura. - NOT: Para desactivar la apertura si hay una se\u00f1al de emergencia.  </p> <p>Programa en Ladder: <pre><code>    ----[ Sensor ]----[ Bot\u00f3n ]----[/ Emergencia ]----( Puerta )----\n</code></pre></p> <ul> <li>Explicaci\u00f3n:  </li> <li><code>[ Sensor ]</code>: Sensor de proximidad (entrada).  </li> <li><code>[ Bot\u00f3n ]</code>: Bot\u00f3n de apertura (entrada).  </li> <li><code>[/ Emergencia ]</code>: Se\u00f1al de emergencia (entrada NC).  </li> <li> <p><code>( Puerta )</code>: Bobina que activa la puerta (salida).  </p> </li> <li> <p>Funcionamiento:  </p> </li> <li>La puerta se abre solo si el sensor detecta presencia Y el bot\u00f3n est\u00e1 presionado, Y no hay una se\u00f1al de emergencia activa.  </li> </ul>"},{"location":"content/p3/#2-sistema-de-llenado-de-un-tanque","title":"2. Sistema de Llenado de un Tanque","text":"<p>Descripci\u00f3n: Un tanque debe llenarse si el nivel de l\u00edquido est\u00e1 por debajo de un l\u00edmite Y una bomba est\u00e1 encendida. Adem\u00e1s, el sistema debe detenerse si se alcanza el nivel m\u00e1ximo.  </p> <p>Compuertas utilizadas: - AND: Para combinar el nivel bajo y el estado de la bomba. - NOT: Para detener el llenado si se alcanza el nivel m\u00e1ximo.  </p> <p>Programa en Ladder: <pre><code>    ----[ Nivel Bajo ]----[ Bomba ]----[/ Nivel M\u00e1ximo ]----( V\u00e1lvula )----\n</code></pre></p> <ul> <li>Explicaci\u00f3n:  </li> <li><code>[ Nivel Bajo ]</code>: Sensor de nivel bajo (entrada).  </li> <li><code>[ Bomba ]</code>: Estado de la bomba (entrada).  </li> <li><code>[/ Nivel M\u00e1ximo ]</code>: Sensor de nivel m\u00e1ximo (entrada NC).  </li> <li> <p><code>( V\u00e1lvula )</code>: Bobina que activa la v\u00e1lvula de llenado (salida).  </p> </li> <li> <p>Funcionamiento:  </p> </li> <li>La v\u00e1lvula se abre si el nivel est\u00e1 bajo Y la bomba est\u00e1 encendida, Y no se ha alcanzado el nivel m\u00e1ximo.  </li> </ul>"},{"location":"content/p3/#3-control-de-un-semaforo","title":"3. Control de un Sem\u00e1foro","text":"<p>Descripci\u00f3n: Un sem\u00e1foro debe cambiar a verde si un bot\u00f3n peatonal est\u00e1 presionado Y no hay veh\u00edculos detectados en el sensor de tr\u00e1fico.  </p> <p>Compuertas utilizadas: - AND: Para combinar el bot\u00f3n peatonal y la ausencia de veh\u00edculos.  </p> <p>Programa en Ladder: <pre><code>    ----[ Bot\u00f3n Peatonal ]----[/ Sensor Tr\u00e1fico ]----( Sem\u00e1foro Verde )----\n</code></pre></p> <ul> <li>Explicaci\u00f3n:  </li> <li><code>[ Bot\u00f3n Peatonal ]</code>: Bot\u00f3n peatonal (entrada).  </li> <li><code>[/ Sensor Tr\u00e1fico ]</code>: Sensor de tr\u00e1fico (entrada NC).  </li> <li> <p><code>( Sem\u00e1foro Verde )</code>: Bobina que activa la luz verde (salida).  </p> </li> <li> <p>Funcionamiento:  </p> </li> <li>El sem\u00e1foro cambia a verde si el bot\u00f3n peatonal est\u00e1 presionado Y no hay veh\u00edculos detectados.  </li> </ul>"},{"location":"content/p3/#4-sistema-de-seguridad-de-una-maquina","title":"4. Sistema de Seguridad de una M\u00e1quina","text":"<p>Descripci\u00f3n: Una m\u00e1quina debe encenderse solo si dos botones de seguridad est\u00e1n presionados simult\u00e1neamente (para evitar accidentes).  </p> <p>Compuertas utilizadas: - AND: Para combinar los dos botones de seguridad.  </p> <p>Programa en Ladder: <pre><code>    ----[ Bot\u00f3n 1 ]----[ Bot\u00f3n 2 ]----( M\u00e1quina )----\n</code></pre></p> <ul> <li>Explicaci\u00f3n:  </li> <li><code>[ Bot\u00f3n 1 ]</code>: Primer bot\u00f3n de seguridad (entrada).  </li> <li><code>[ Bot\u00f3n 2 ]</code>: Segundo bot\u00f3n de seguridad (entrada).  </li> <li> <p><code>( M\u00e1quina )</code>: Bobina que activa la m\u00e1quina (salida).  </p> </li> <li> <p>Funcionamiento:  </p> </li> <li>La m\u00e1quina se enciende solo si ambos botones est\u00e1n presionados al mismo tiempo.  </li> </ul>"},{"location":"content/p3/#5-sistema-de-alarma-de-incendio","title":"5. Sistema de Alarma de Incendio","text":"<p>Descripci\u00f3n: Una alarma de incendio debe activarse si se detecta humo O se detecta un aumento de temperatura.  </p> <p>Compuertas utilizadas: - OR: Para combinar las se\u00f1ales de humo y temperatura.  </p> <p>Programa en Ladder: <pre><code>    ----[ Sensor Humo ]----( Alarma )----\n         |\n    ----[ Sensor Temperatura ]----\n</code></pre></p> <ul> <li>Explicaci\u00f3n:  </li> <li><code>[ Sensor Humo ]</code>: Sensor de humo (entrada).  </li> <li><code>[ Sensor Temperatura ]</code>: Sensor de temperatura (entrada).  </li> <li> <p><code>( Alarma )</code>: Bobina que activa la alarma (salida).  </p> </li> <li> <p>Funcionamiento:  </p> </li> <li>La alarma se activa si se detecta humo O un aumento de temperatura.  </li> </ul>"},{"location":"content/p3/#6-control-de-un-elevador","title":"6. Control de un Elevador","text":"<p>Descripci\u00f3n: Un elevador debe moverse si se selecciona un piso Y la puerta est\u00e1 cerrada.  </p> <p>Compuertas utilizadas: - AND: Para combinar la selecci\u00f3n de piso y el estado de la puerta.  </p> <p>Programa en Ladder: <pre><code>    ----[ Selecci\u00f3n Piso ]----[ Puerta Cerrada ]----( Motor Elevador )----\n</code></pre></p> <ul> <li>Explicaci\u00f3n:  </li> <li><code>[ Selecci\u00f3n Piso ]</code>: Bot\u00f3n de selecci\u00f3n de piso (entrada).  </li> <li><code>[ Puerta Cerrada ]</code>: Sensor de puerta cerrada (entrada).  </li> <li> <p><code>( Motor Elevador )</code>: Bobina que activa el motor del elevador (salida).  </p> </li> <li> <p>Funcionamiento:  </p> </li> <li>El elevador se mueve si se selecciona un piso Y la puerta est\u00e1 cerrada.  </li> </ul>"},{"location":"content/p4/","title":"Semana 4","text":"<p>Note</p> <p>El contenido se publicar\u00e1 en la fecha correspondiente.</p>"},{"location":"content/p5/","title":"Semana 5","text":"<p>Note</p> <p>El contenido se publicar\u00e1 en la fecha correspondiente.</p>"},{"location":"content/p6/","title":"Semana 6","text":"<p>Note</p> <p>El contenido se publicar\u00e1 en la fecha correspondiente.</p>"},{"location":"content/p7/","title":"Semana 7","text":"<p>Note</p> <p>El contenido se publicar\u00e1 en la fecha correspondiente.</p>"},{"location":"content/p8/","title":"Semana 8","text":"<p>Note</p> <p>El contenido se publicar\u00e1 en la fecha correspondiente.</p>"},{"location":"content/p9/","title":"Semana 9","text":"<p>Note</p> <p>El contenido se publicar\u00e1 en la fecha correspondiente.</p>"},{"location":"pi/p1/","title":"Introducci\u00f3n Proyecto Integrador","text":""},{"location":"pi/p2/","title":"Avance 1","text":""}]}